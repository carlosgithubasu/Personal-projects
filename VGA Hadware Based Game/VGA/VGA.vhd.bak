




LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
use IEEE.STD_LOGIC_ARITH.ALL;
use IEEE.STD_LOGIC_UNSIGNED.ALL;

ENTITY VGA IS


PORT ( CLK_50MHz ,RST : IN STD_LOGIC;   --CLK 50 MHZ DE EL TEST BENCH
        HSYNC, VSYNC : OUT STD_LOGIC;    --SENALES HSYNC Y VSYNC HACIA EL MONITOR
	     RGB: OUT STD_LOGIC_VECTOR(2 DOWNTO 0));  --COLORES DE LA GAMA RGB TOTAL 16
END VGA;




ARCHITECTURE BEHAVIORAL OF VGA IS
	
	
	COMPONENT VGA_SYNC   --COMPONENTE DE SINCRONIZACION PARA EL VGA
	      
	PORT ( CLK_25MHZ  , RST: IN STD_LOGIC;      --CLK 25 MHZ PARA EL VGA SYNC
			 H_SYNC, V_SYNC , VIDEO_ON : OUT STD_LOGIC; 
			HCOUNT, VCOUNT : OUT STD_LOGIC_VECTOR(9 DOWNTO 0)); --SENALES NECESARIA QUE NOS PROPORCIONA EL VGA_SYNC
	END COMPONENT;


	COMPONENT FQDIVIDER    --DIVISOR DE DIVISOR DE FRECUENCIA PARA OBTENER 25 MHZ
	PORT ( CLK_IN  , RST: IN STD_LOGIC;  --LE MANDAMOS EL CLK DE 50 MHZ , RESET Y NOS DEVUELVE EL CLK 25MHZ
			 CLK_OUT : OUT STD_LOGIC);
	END COMPONENT;



SIGNAL R_ST : STD_LOGIC := '0';  --SEÃ‘AL RESET

SIGNAL HCOUNT : STD_LOGIC_VECTOR(9 DOWNTO 0):= "0000000000"; --Contador para testbench.
SIGNAL VCOUNT : STD_LOGIC_VECTOR(9 DOWNTO 0):= "0000000000"; 

SIGNAL V_SYNC: STD_LOGIC := '0';  								--PULSO VERTICAL SYNC
SIGNAL H_SYNC: STD_LOGIC := '0';  								--PULSO HORIZONTAL SYNC
SIGNAL VIDEO_ON  : STD_LOGIC := '0';--DISPLAY
SIGNAL CLK_25MHZ : STD_LOGIC := '0'; 

BEGIN

SYNC:  VGA_SYNC PORT MAP (CLK_25MHZ , RST, H_SYNC, V_SYNC , VIDEO_ON , HCOUNT , VCOUNT);   --CONCURRENTE V_SYNC H_SYNC
CLK:   FQDIVIDER PORT MAP ( CLK_50MHZ , R_ST , CLK_25MHZ); 

VSYNC<=V_SYNC;
HSYNC<=H_SYNC;

PROCESS(CLK_25MHZ,RST , VIDEO_ON)
BEGIN  

IF RISING_EDGE(CLK_25MHZ) THEN


 IF VIDEO_ON = '1' THEN
    IF (HCOUNT= 299 AND HCOUNT= 440)  OR (VCOUNT= 240  AND VCOUNT= 300) THEN
    RGB<= (OTHERS => '0');
	 
	 ELSE 
	 RGB<= (OTHERS => '1');
	
	END IF;
 ELSE
    RGB<= (OTHERS => '1');
END IF;
 
  
END IF;
END PROCESS;

END BEHAVIORAL;