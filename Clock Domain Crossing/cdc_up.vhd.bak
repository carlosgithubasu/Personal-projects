library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
 
entity cdc_up is
    generic(
        DATA_WIDTH : integer := 8
    );
    Port ( 
        in_rst : in std_logic;
        in_clk_A : in std_logic;
        in_clk_B : in std_logic;
        in_data_A_vld : in std_logic;
        in_data_A : in std_logic_vector(DATA_WIDTH - 1 downto 0);
        out_data_B : out std_logic_vector(DATA_WIDTH - 1 downto 0);
        out_data_B_vld : out std_logic            
    );
end cdc_up;
 
architecture Behavioral of cdc_up is
    signal r_data_cnt : std_logic_vector(3 downto 0) := (others => '0');
begin
 
    out_data_B <= in_data_A when r_data_cnt(3 downto 2) = "01" else (others => '0');
    out_data_B_vld <= '1' when r_data_cnt(3 downto 2) = "01" else '0';
 
    process(in_clk_B, in_rst)
    begin
        if in_rst = '1' then
            r_data_cnt <= (others => '0');
        elsif rising_edge(in_clk_B) then
            r_data_cnt <= r_data_cnt(2 downto 0) & in_data_A_vld;
        end if;
    end process;
end Behavioral;