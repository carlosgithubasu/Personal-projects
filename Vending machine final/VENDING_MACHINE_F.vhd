-- FileName: lcd_example.vhd
-- Design Software: Quartus II 32-bit Version 11.1 Build 173 SJ Full Version
-- Carlos Pérez Araujo Instituto tecnologico de estudios superiores de monterrey

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.NUMERIC_STD.ALL;

ENTITY VENDING_MACHINE_F IS
	PORT (
			--MASTER CLOCK
	      CLK : IN STD_LOGIC; 
			--LCD_CONTROLLER
			RW, RS, E : OUT STD_LOGIC; 
		   LCD_DATA :  OUT STD_LOGIC_VECTOR(7 DOWNTO 0);
		   --KEYPAD_CONTROLLER
			ROW : IN  STD_LOGIC_VECTOR(0 TO 3);    --KEYPAD'S ROW INPUTS
			COL : OUT STD_LOGIC_VECTOR(0 TO 3);    --KEYPAD'S COLUMNS OUTPUTS
			N   : OUT STD_LOGIC_VECTOR(3 DOWNTO 0); --LED'S OUTPUTS BCD
			KEY_PRESSED_OUT : out std_logic;
			DEVOLUTION : IN STD_LOGIC;
			DEVOLUTIONLED : OUT STD_LOGIC;
			MONEY : IN STD_LOGIC;
			RESET : IN STD_LOGIC
			
	     );
END VENDING_MACHINE_F;


ARCHITECTURE STRUCTURAL OF VENDING_MACHINE_F IS


--SEÑALES INTERNAS DE SALIDA AL LCD
SIGNAL RS_MAIN,RW_MAIN,E_MAIN : STD_LOGIC := '0';
SIGNAL LCD_DATA_MAIN : STD_LOGIC_VECTOR(7 DOWNTO 0):= "00000000";
SIGNAL LCD_ENABLE_EXAMPLE : STD_LOGIC := '0';

--SEÑAL KEYPAD INTERNAS
SIGNAL  KEY_PRESSED_MAIN: STD_LOGIC := '0';
SIGNAL ROW_MAIN,COL_MAIN : STD_LOGIC_VECTOR(0 TO 3):= "0000";
SIGNAL KEY_MAIN : STD_LOGIC_VECTOR (3 DOWNTO 0);

--CLK 1 KHZ KEYPAD MODULO
SIGNAL CLOCK1KHZ : STD_LOGIC := '0';
--SEÑAL MONEYCHECK
SIGNAL MONEY_DEBOUNCED : STD_LOGIC;
SIGNAL CLKDEBOUNCE : STD_LOGIC;
SIGNAL DDEVOLUTION : STD_LOGIC;


		COMPONENT CLK1KHZ IS
		PORT (
			MCLK : IN STD_LOGIC;
			CLKOUT : OUT STD_LOGIC
		);
		END COMPONENT;
		
		
		COMPONENT CLK100HZ IS
				PORT (
					MCLK : IN STD_LOGIC;
					CLKOUT : OUT STD_LOGIC
				);
	   END COMPONENT;

		COMPONENT KEYPAD IS
			PORT (
				CLK : IN STD_LOGIC;
				RESET : IN STD_LOGIC;
				ROW : IN STD_LOGIC_VECTOR(0 TO 3);
				COL : OUT STD_LOGIC_VECTOR(0 TO 3);
				KEY : OUT STD_LOGIC_VECTOR(3 DOWNTO 0);
				KEY_PRESSED : OUT STD_LOGIC
			);
		END COMPONENT;
			


		COMPONENT LCD_EXAMPLE IS     
		PORT (
				CLK : IN STD_LOGIC;
			   RESET : IN STD_LOGIC;	
				RW, RS, E : OUT STD_LOGIC; 
				LCD_DATA : OUT STD_LOGIC_VECTOR(7 DOWNTO 0);
				KEY : IN STD_LOGIC_VECTOR( 3 DOWNTO 0);
				KEY_PRESSED : IN STD_LOGIC;
				MONEY : IN STD_LOGIC;
				DEVOLUTION: IN STD_LOGIC
				);			
      END COMPONENT;
		
	COMPONENT DEBOUNCE IS
	PORT (
		CLK   : IN STD_LOGIC;
		DIN   : IN STD_LOGIC;
		QOUT  : OUT STD_LOGIC
	);
   END COMPONENT;
	
	COMPONENT DEBOUNCEDEVOLUTION IS
	PORT (
		CLK   : IN STD_LOGIC;
		DIN   : IN STD_LOGIC;
		QOUT  : OUT STD_LOGIC
	);
   END COMPONENT;



BEGIN
--LCD_EXAMPLE SALIDAS CONCURRENTES FISICAS

RW <= RW_MAIN;
RS<= RS_MAIN;
E <= E_MAIN;  
LCD_DATA <= LCD_DATA_MAIN;

--KEYPAD SALIDAS CONCURRENTES FISICAS

COL <=COL_MAIN;
N <=KEY_MAIN;
KEY_PRESSED_OUT<= KEY_PRESSED_MAIN;



--PORT MAPING
COMPONENT_LCD_EXAMPLE: LCD_EXAMPLE PORT MAP ( CLK => CLK,
															 RESET=>RESET,
															 RW => RW_MAIN,     
															 RS => RS_MAIN,  
															 E => E_MAIN,    
															 LCD_DATA => LCD_DATA_MAIN,  
															 KEY => KEY_MAIN,  
															 KEY_PRESSED => KEY_PRESSED_MAIN,
															 MONEY => MONEY_DEBOUNCED,
															 DEVOLUTION => DDEVOLUTION
															 );

COMPONENT_CLK1KHZ :   CLK1KHZ 		PORT MAP( MCLK => CLK,
															 CLKOUT =>CLOCK1KHZ
														  );
												  
												  

COMPONENT_KEYPAD: KEYPAD            PORT MAP (
															CLK => CLOCK1KHZ,
															RESET=>RESET,
															ROW => ROW,
															COL => COL_MAIN,
															KEY => KEY_MAIN,
															KEY_PRESSED=> KEY_PRESSED_MAIN
												 );
	
CLK100_HZ: CLK100HZ                 PORT MAP (CLK,CLKDEBOUNCE);

DEBOUNCE1: DEBOUNCE                 PORT MAP (CLKDEBOUNCE,MONEY, MONEY_DEBOUNCED);

DEBOUNCEBUTTON: DEBOUNCEDEVOLUTION  PORT MAP (CLKDEBOUNCE,DEVOLUTION,DDEVOLUTION);	
															 
														

END STRUCTURAL;